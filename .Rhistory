node_tibble = as_tibble(cbind(id, layer, node))
#Make the list of edges
from = vector()
to = vector()
for(j in 1:nrow(node_tibble)){
from = c(from, rep(node_tibble$id[j],
nrow(filter(node_tibble, layer == (node_tibble$layer[j]+1)))))
to = c(to, filter(node_tibble, layer == (node_tibble$layer[j]+1))$id)
}
edge_tibble = as_tibble(cbind(from, to))
#####Now let's loop through generations
# for(j in levels(get(name2)$gen)){
for(j in "1000"){
print(j)
#adding weights, weight sign, activation to the edge list
ind = filter(get(name2), gen == j, ind_ID == "01")
edge_tibble_ind = cbind(edge_tibble, ind$value, ind$w_sign)
node_tibble = as_tibble(cbind(id, layer, node))
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
E(network_d)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
E(network_d)$value = edge_tibble_ind$`ind$value`
network_d = network_d - E(network_d)[E(network_d)$weight == 0]
jpeg(paste("Plot",
"s", ind$seed,
"arch",ind$architecture,
"cycle",
paste(rep("0",max(nchar(levels(ind$gen)))-(nchar(j))),j, sep=""),
".png",
sep = "_")
,width = 700,
height = 700)
title = paste("Generation ", ind$gen[1])
plot(network_d,
layout = l,
edge.arrow.size = 0.5,   # Arrow size, defaults to 1
edge.arrow.width = 0.7,  # Arrow width, defaults to 1
edge.arrow.height = 0.9, # Arrow width, defaults to 1
edge.lty = c("solid"),
edge.width = abs(E(network_d)$value/max(E(network_d)$value) * 10),
main = title,
vertex.label = NA
)
dev.off()
}
####Create gif
## list file names and read in
# imgs =
# intersect(
# intersect(
# intersect(list.files(pattern = "*png$", full.names = T),
#                                      list.files(pattern = levels(get(name1)$architecture)[1],
#                                                 full.names =  T))
# # ,
# list.files(pattern = levels(get(name1)$mut_rate_dup)[1], full.names =  T)
# ),
# list.files(pattern = levels(get(name1)$change_freq)[1], full.names =  T)
# )
# img_list = lapply(imgs, image_read)
## join the images together
# img_joined <- image_join(img_list)
## animate at 2 frames per second
# img_animated <- image_animate(img_joined, fps = 2)
## save to disk
# path = paste("Gif",get(name1)$seed[1], get(name1)$architecture[1], ".gif", sep = "_")
# image_write(image = img_animated,
#             path = path)
#
}
set_graph_style(plot_margin = margin(1,1,1,1))
graph <- as_tbl_graph(network_d)
gglayout <- create_layout(graph, layout = 'eigen')
gglayout
ll = as.data.frame(l) %>% rownames_to_column()
View(ll)
gglayout %>% select(-c(x, y))
gglayout %>% select(-c(x, y, circular)) %>% merge(ll, by.x = "name",
by.y = "name")
ll
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(rowname = name)
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(rowname = "name")
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(rownames = "name")
ll
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(rowname = "name")
ll %>% rename(rowname = "name")
ll %>% rename(rowname  = "name")
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(name = rowname)
gglayout %>% select(-c(x, y, circular)) %>% left_join(ll, by = name)
gglayout %>% select(-c(x, y, circular)) %>% left_join(ll, by = "name")
gglayout = gglayout %>% select(-c(x, y, circular)) %>% left_join(ll, by = "name")
ggraph(gglayout)
gglayout = gglayout %>%
select(-c(x, y, circular)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
graph <- as_tbl_graph(network_d)
gglayout <- create_layout(graph, layout = 'eigen')
gglayout = gglayout %>%
select(-c(x, y, circular)) %>%
left_join(ll, by = "name") %>%
as_layout_tbl_graph()
gglayout <- create_layout(graph, layout = 'eigen')
gglayout = gglayout %>%
select(-c(x, y, circular)) %>%
left_join(ll, by = "name")
ggraph(gglayout)
as_tbl_graph
gglayout = gglayout %>%
select(-c(x, y, circular)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
gglayout = gglayout %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
ggraph(gglayout)
gglayout <- create_layout(graph, layout = 'eigen')
ggraph(gglayout)
ggraph(gglayout) +
geom_edge_link(aes(colour = factor(year))) +
geom_node_point()
ggraph(gglayout) +
geom_edge_link() +
geom_node_point()
gglayout <- create_layout(graph, layout = 'eigen')
gglayout = gglayout %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
ggraph(gglayout) +
geom_edge_link() +
geom_node_point()
gglayout <- create_layout(graph, layout = 'eigen')
ggraph(gglayout) +
geom_edge_link() +
geom_node_point()
View(gglayout)
graph <- as_tbl_graph(network_d)
View(graph)
View(graph)
View(graph)
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(name = rowname)
set_graph_style(plot_margin = margin(1,1,1,1))
graph <- as_tbl_graph(network_d)
gglayout <- create_layout(graph, layout = 'eigen')
View(graph)
library(ggraph)
View(network_d)
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(name = rowname)
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
gglayout <- create_layout(graph, layout = 'eigen')
gglayout = gglayout %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
View(gglayout)
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
View(graph)
View(network_d)
#adding weights, weight sign, activation to the edge list
ind = filter(get(name2), gen == j, ind_ID == "01")
edge_tibble_ind = cbind(edge_tibble, ind$value, ind$w_sign)
node_tibble = as_tibble(cbind(id, layer, node))
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
E(network_d)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
E(network_d)$value = edge_tibble_ind$`ind$value`
network_d = network_d - E(network_d)[E(network_d)$weight == 0]
View(network_d)
#####Now let's loop through generations
# for(j in levels(get(name2)$gen)){
for(j in "10000"){
print(j)
#adding weights, weight sign, activation to the edge list
ind = filter(get(name2), gen == j, ind_ID == "01")
edge_tibble_ind = cbind(edge_tibble, ind$value, ind$w_sign)
node_tibble = as_tibble(cbind(id, layer, node))
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
E(network_d)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
E(network_d)$value = edge_tibble_ind$`ind$value`
network_d = network_d - E(network_d)[E(network_d)$weight == 0]
jpeg(paste("Plot",
"s", ind$seed,
"arch",ind$architecture,
"cycle",
paste(rep("0",max(nchar(levels(ind$gen)))-(nchar(j))),j, sep=""),
".png",
sep = "_")
,width = 700,
height = 700)
title = paste("Generation ", ind$gen[1])
plot(network_d,
layout = l,
edge.arrow.size = 0.5,   # Arrow size, defaults to 1
edge.arrow.width = 0.7,  # Arrow width, defaults to 1
edge.arrow.height = 0.9, # Arrow width, defaults to 1
edge.lty = c("solid"),
edge.width = abs(E(network_d)$value/max(E(network_d)$value) * 10),
main = title,
vertex.label = NA
)
dev.off()
}
View(network_d)
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T, mode = "out")
View(edge_tibble_ind)
View(edge_tibble)
View(edge_tibble_ind)
View(node_tibble)
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T, mode = "out")
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
View(network_d)
node_tibble = as_tibble(cbind(id, layer, node)) %>%
mutate(id = as.factor(id))
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
View(network_d)
View(edge_tibble)
View(edge_tibble_ind)
edge_tibble_ind = cbind(edge_tibble, ind$value, ind$w_sign) %>%
mutate(from = as.factor(from), to = as.factor(to))
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
View(network_d)
ll = as.data.frame(l) %>% rownames_to_column() %>% rename(name = rowname)
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
gglayout <- create_layout(graph, layout = 'eigen')
ggraph(gglayout) +
geom_edge_link(aes( colour = )) +
geom_node_point()
View(gglayout)
?E
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
E(network_d)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
E(network_d)$value = edge_tibble_ind$`ind$value`
network_d = network_d - E(network_d)[E(network_d)$weight == 0]
# ###plot network####
##create igraph or ggraph object
network_d <- igraph::graph_from_data_frame(d = edge_tibble_ind,
vertices = node_tibble,
directed = T)
E(network_d)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
E(network_d)$value = edge_tibble_ind$`ind$value`
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
gglayout <- create_layout(graph, layout = 'eigen')
ggraph(gglayout) +
geom_edge_link(aes( colour = )) +
geom_node_point()
gglayout
E(gglayout)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
E(graph)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
E(graph)$value = edge_tibble_ind$`ind$value`
gglayout <- create_layout(graph, layout = 'eigen')
gglayout = gglayout %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
gglayout
gglayout = gglayout %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
gglayout <- create_layout(graph, layout = 'eigen') %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
graph
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
graph
gglayout = create_layout(graph, layout = 'eigen') %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
gglayout
gglayout = create_layout(graph, layout = 'eigen')
gglayout
ggraph(gglayout) +
geom_edge_link(aes( colour = )) +
geom_node_point()
ggraph(gglayout) +
geom_edge_link(aes(  )) +
geom_node_point()
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
graph
E(graph)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
graph <- as_tbl_graph(network_d, directed = T, mode = "out" )
E(graph)$color = as.factor(edge_tibble_ind$`ind$w_sign`)
E(graph)$value = edge_tibble_ind$`ind$value`
graph
gglayout = create_layout(graph, layout = 'eigen') %>%
select(-c(x, y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
gglayout
gglayout = create_layout(graph, layout = 'eigen') %>%
gglayout
gglayout = create_layout(graph, layout = 'eigen')
gglayout
ggraph(gglayout) +
geom_edge_link(aes( color = value )) +
geom_node_point()
ggraph(gglayout) +
geom_edge_link(aes( size = value )) +
geom_node_point()
ggraph(gglayout) +
geom_edge_link(aes(width = weight)) +
geom_node_point()
ggraph(gglayout) +
geom_edge_link(aes(width = value)) +
geom_node_point()
ggraph(graph) +
geom_node_point(mapping=aes(x=x, y=y, frame=time),
shape=21, size=5, stroke=1, color="grey10")
ggraph(graph) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10")
View(ll)
ggraph(graph, node.position = ll) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10")
gglayout = create_layout(graph, layout = 'eigen') %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
gglayout
gglayout = create_layout(graph, layout = 'eigen') %>%
select(-c(x,y)) %>%
left_join(ll, by = "name") %>%
as_tbl_graph()
gglayout
ggraph(graph, node.position = gglayout) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10")
ggraph(graph, 'manual', node.position = gglayout) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10")
ggraph(graph, 'manual', node.positions = gglayout) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10")
ggraph(graph, 'manual', node.positions = ll) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10")
layout <- layout_with_fr(graph) %>% as.data.frame() %>% rename(x=V1, y=V2)
View(layout)
View(ll)
View(layout)
ggraph(graph, 'manual', node.positions = ll %>% select(-name)) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10")
ggraph(graph, 'manual', node.positions = ll %>% select(-name)) +
geom_edge_link(aes(width = value)) +
geom_node_point()
ggraph(graph, 'manual', node.positions = ll %>% select(-name)) +
geom_node_point(
shape=21, size=5, stroke=1, color="grey10")
ggraph(graph, 'manual', node.positions = ll %>% select(-name)) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
geom_node_point()
ggraph(graph, 'manual', node.positions=layout)
ggraph(graph, 'manual', node.positions = ll %>% select(-name)) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
geom_node_point()
ggraph(graph, 'manual', node.positions = ll %>% select(-name)) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
ggraph(graph, 'manual', node.positions = layout) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
plot <- ggraph(graph, 'manual', node.positions = layout) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
?ggraph
layout <- layout_tbl_graph_manual(graph, x = ll$x, y = ll$y)
library(ggraph)
layout <- layout_tbl_graph_manual(graph, x = ll$x, y = ll$y)
layout <- ggraph::layout_tbl_graph_manual(graph, x = ll$x, y = ll$y)
ggraph(graph, 'manual', x = ll$x, y = ll$y)
plot <- ggraph(graph, 'manual', x = ll$x, y = ll$y) +
geom_node_point(color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
plot
plot <- ggraph(network_d, 'manual', x = ll$x, y = ll$y) +
geom_node_point(color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
plot <- ggraph(network_d, 'manual', x = ll$x, y = ll$y) +
geom_node_point(mapping=aes(x=x, y=y),
shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
plot
plot <- ggraph(network_d, 'manual', x = ll$x, y = ll$y) +
geom_node_point(shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
plot
ggraph(network_d, 'manual', x = ll$x, y = ll$y) +
geom_node_point(shape=21, size=5, stroke=1, color="grey10") +
geom_edge_link(aes(width = value)) +
scale_fill_manual(breaks=c(0, 1), values=c("black", "red")) +
scale_alpha_continuous(range=c(0,1)) +
ggforce::theme_no_axes() +
theme(legend.position="none",
panel.border = element_blank())
###Create gif
# list file names and read in
imgs =
# intersect(
# intersect(
intersect(list.files(pattern = "*png$", full.names = T),
list.files(pattern = levels(get(name1)$architecture)[1],
full.names =  T))
# ,
# list.files(pattern = levels(get(name1)$mut_rate_dup)[1], full.names =  T)
# ),
# list.files(pattern = levels(get(name1)$change_freq)[1], full.names =  T)
# )
img_list = lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
View(img_list)
img_sub = img_joined[1:2]
img_sub = img_joined[[1:2]]
img_sub = img_joined[[1]]
img_sub = img_joined[1]
img_sub = head(img_joined)
## animate at 2 frames per second
img_animated <- image_animate(img_sub, fps = 2)
## save to disk
path = paste("Gif",get(name1)$seed[1], get(name1)$architecture[1], ".gif", sep = "_")
image_write(image = img_animated,
path = path)
?head
length(imgs)
img_sub = head(img_joined, length(imgs) / 10)
## animate at 2 frames per second
img_animated <- image_animate(img_sub, fps = 2)
## save to disk
path = paste("Gif",get(name1)$seed[1], get(name1)$architecture[1], ".gif", sep = "_")
image_write(image = img_animated,
path = path)
